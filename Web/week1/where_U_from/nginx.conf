user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;
worker_rlimit_nofile 51200;

events {
  use epoll;
  worker_connections 51200;
  multi_accept on;
}

http {
  include mime.types;
  default_type text/plain;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 120;
  server_tokens off;
  tcp_nodelay on;

#   fastcgi_connect_timeout 300;
#   fastcgi_send_timeout 300;
#   fastcgi_read_timeout 300;
#   fastcgi_buffer_size 64k;
#   fastcgi_buffers 4 64k;
#   fastcgi_busy_buffers_size 128k;
#   fastcgi_temp_file_write_size 128k;
#   fastcgi_intercept_errors on;

  #Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  ##Brotli Compression
  #brotli on;
  #brotli_comp_level 6;
  #brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

  ##If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  #open_file_cache max=1000 inactive=20s;
  #open_file_cache_valid 30s;
  #open_file_cache_min_uses 2;
  #open_file_cache_errors on;

######################## default ############################
  server { 
    listen 80;
  #  server_name localhost;
	root /usr/share/nginx/html;

	index index.html index.htm ;
	
    error_page 404 /404.html;
    error_page 502 /502.html;
	location /404.html {
		#root /usr/local/nginx/html;
        return 404;
	}
	location / {
		return 200 'visit /flaggeeee in localhost';
	}
    location  /flaggeeee {
    if ( $http_x_forwarded_for != 127.0.0.1){
        return 200 'local access only!';
    }
    return 200 'login in to find real flag in /re3l_flag   ^__^';
}


location  /re3l_flag {
    add_header Cookie "login=0";
    if ( $http_x_forwarded_for != 127.0.0.1){
        return 200 'local access only!';
    }
    if ( $cookie_login != 1){
    return 200 'login in to find real flag in /re3l_flag ^__^';
    }
    if ( $request_method != POST ){
      return 200 'plz post something to me then i send my flag to you 0__0';
    }
    return 200 '0xGame{http_head3r_m2tters}';
}

  
    location /nginx_status {
      stub_status on;
      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
      expires 30d;
      access_log off;
    }
    location ~ .*\.(js|css)?$ {
      expires 7d;
      access_log off;
    }
    location ~ ^/(\.user.ini|\.ht|\.git|\.svn|\.project|LICENSE|README.md) {
      deny all;
    }
  }
########################## vhost #############################
  include vhost/*.conf;
}
